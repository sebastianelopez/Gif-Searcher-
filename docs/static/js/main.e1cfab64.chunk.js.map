{"version":3,"sources":["components/AgregarCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","inputValue","setValue","onSubmit","evento","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAmB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAElBC,mBAAS,IAFS,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAkBjD,OACI,0BAAMC,SAZQ,SAACC,GACfA,EAAOC,iBAEJJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAS,OAQT,2BACAO,KAAK,OACLC,YAAY,oBACZC,MAAOV,EACPW,SApBgB,SAACR,GACrBF,EAASE,EAAOS,OAAOF,Y,uBCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE2EC,UAAUH,GAFrF,sBAIDI,MAAMF,GAJL,cAIbG,EAJa,gBAMCA,EAAKC,OANN,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAZrB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACnC,OACI,yBAAKc,UAAU,4CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECDd,SAACA,GAAa,IAAD,EACZf,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAqBnC,OAfHC,qBAAU,WACHxB,EAAQC,GACPwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAEf,UAGR,CAACpB,IAIIqB,EDlBcM,CAAa3B,GAA3BO,EAF6B,EAE7BA,KAAKa,EAFwB,EAExBA,QAIZ,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,eAEZ,yBAAKA,UAAU,aAEHT,EAAKE,KAAI,SAAAC,GAAG,OACR,kBAAC,EAAD,eACAkB,IAAKlB,EAAIC,IACLD,UElBnBmB,EAAe,WAAK,IAAD,EAEO5C,mBAAS,CAAC,gBAFjB,mBAErB6C,EAFqB,KAET9C,EAFS,KAU5B,OACI,oCACI,wBAAIgC,UAAU,mBAAd,kBACA,kBAAC,EAAD,CAAkBhC,cAAeA,IACjC,6BAIA,4BAEK8C,EAAWrB,KAAI,SAAAT,GAAS,OACvB,kBAAC,EAAD,CACE4B,IAAK5B,EACLA,UAAWA,U,MCrB/B+B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e1cfab64.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AgregarCategoria = ({setCategorias}) => {\r\n\r\n    const [inputValue, setValue] = useState('');\r\n\r\n    const handleInputChange=(evento)=>{\r\n        setValue(evento.target.value);\r\n    }\r\n    const handleEnter=(evento)=>{\r\n        evento.preventDefault(); //evita que se actualize la pagina por caracteristica propia del form\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategorias(cats=>[inputValue, ...cats]);\r\n            setValue('');\r\n        };\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleEnter}>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"Agregar categoria\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAgregarCategoria.propTypes={\r\n setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(categoria)=>{\r\n\r\n    const url= `https://api.giphy.com/v1/gifs/search?api_key=xuVqfexyNONUWLIHnXkX43f8WvRt7BLH&q=${encodeURI(categoria)}&limit=10`;\r\n    \r\n    const resp= await fetch(url);\r\n\r\n    const {data}= await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState, useEffect} from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const {data,loading}=useFetchGifs(categoria);     \r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">            \r\n                    {\r\n                        data.map(img=>(\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                            />\r\n                        ))\r\n                        }\r\n                \r\n            </div>\r\n        </>    \r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs=(categoria)=>{\r\n const [state, setstate] = useState({\r\n     data:[],\r\n     loading: true\r\n });\r\n\r\n useEffect(()=>{\r\n        getGifs(categoria)\r\n        .then(imgs=>{\r\n            setTimeout(()=>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n            },500)\r\n            \r\n        })\r\n    },[categoria])    \r\n\r\n\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AgregarCategoria } from './components/AgregarCategoria';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=>{\r\n\r\n    const [categorias, setCategorias]= useState(['Barry Allen']);\r\n\r\n    const handleAdd = (nuevo)=>{\r\n        \r\n    };\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"tituloprincipal\">Gif Expert App</h2>\r\n            <AgregarCategoria setCategorias={setCategorias} />\r\n            <hr />\r\n        \r\n            \r\n\r\n            <ol>\r\n                {\r\n                 categorias.map(categoria =>\r\n                  <GifGrid \r\n                    key={categoria}\r\n                    categoria={categoria} \r\n                  />\r\n                 )   \r\n                }\r\n            </ol>\r\n        </>    \r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}